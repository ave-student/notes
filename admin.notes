--notes: admin

@@n Обновление пакетов
@@t linux, aptitude, update, packages
@@d

Просмотреть список пакетов нуждающихся в обновлении с
выводом информации об их текущей и последней доступной версии:

$ aptitude -F "%p | %v | %V" search ~U

То же для отдельно взятого пакета:

$ aptitude -F "%p | %v | %V" search [package_name]

Обновления всех установленных пакетов:

# aptitude update && aptitude upgrade

Для обновления конкретного пакета достаточно просто выполнить его
повторную установку:

# aptitude install [package_name]

@@n Создание загрузочной флешки
@@t linux, boot, flash, загрузочная, флэшка, install, live-usb
@@d

Для создания live-usb необходимо выполнить несколько простых шагов.
1 Подготовить флэш устройство.
2 Установить программу unetbootin.
3 Записать образ на флэшку.

1 Подготовка флэш устройства заключается в его форматировании:

# df -h umount /dev/sdb1

где sdb1 обозначение usb-устройства в системе.

mkfs.vfat /dev/sdb1

для usb-устройств рекомендуется использование
нежурналируемой файловой системы, что обеспечит более
продолжительный срок службы девайса.

2.1 Установка Unetbootin:

# aptitude install unetbootin

3.1 Запись образа на флэшку.
Все операции производятся в графическом интерфейсе только что
установленной программы.

2.2 Альтернатива использованию стороннего ПО - это стандартнаю *nix
утилита dd.

# dd if=<{image.iso}> of=/dev/<{usb_device}>

3.2 Запись образа на ранее подготовленный носитель:

# umount /dev/sdb1

где /dev/sdb1 - flash-накопитель.

# dd if=image.iso of=/dev/sdb1

@@n Извлечение архивов *.tar
@@t tar, tar.gz, tar.bz2, archives, extract, linux
@@d

					 Извлечь один файл из tar.gz 

Для начала необходимо узнать путь до нужного файла в архиве tar.gz:

$ tar  -tzf backup.tar.gz | grep core.php 

Для извлечения определенного файла из tar предусмотрена возможность
перечисления нужных файлов в виде аргументов. 

$ tar  -xzvf backup.tar.gz  index.php CORE/core.php 

В результате из архива backup.tar.gz будут извлечены не все файлы а
лишь два: index.php CORE/core.php.

Материал взят с сайта:
http://blog.lysov.ru/?p=125 

@@n Установка flash-player в Yandex-browser
@@t debian yandex-browser, yandex, flash-player, flash, install, linux
@@d

Для использования flash-player в Яндекс-browser, необходимо установить
pepperflashplugin-nonfree из стандартного репозитория ubuntu:

    $ sudo aptitude install pepperflashplugin-nonfree

@@n Установка python3 и Qt4	
@@t python3, python, qt, qt4, programming, gui, linux
@@d

Установка библиотеку QT:
- Установить интерпретатор Python3 $ su $ 'passw'

	# aptitude install python3 python3-dev python3-doc

- Установить библиотеку QT4:

	# aptitude install qt4-dev-tools

- Установить дополнительно необходимые пакеты:

	# aptitude install libxtst-dev g++

- Скачать SIP и PyQt: (riverbank)
- Распаковать скачанные архивы:
- 
	# cd SIP 
	# python3 configure.py 
	# make install 
	# cd PyQt
	# python3 configure.py
	# make make install

В результате имеем рабочий Python3 и библиотеку PyQt4.

@@n Отсутствие звука в Debian
@@t debian, sound, trouble, linux
@@d

Отсутствие звука в debian решается следующим образом:

# touch /etc/asound.conf

# vim /etc/asound.conf

Добавляем в файл следующее содержимое:

defaults.ctl.card 1
defaults.pcm.card 1
defaults.timer.card 1

Помимо этого можно выполнить команду:

# alsactl init

@@n Драйвер для HL-2140R
@@t driver, brother, printer, hl-2140, linux
@@d

В Debian для корректной работы принтера Brother HL-2140, необходимо установить
драйвер для модели Brother HL-2140 Foomatic/hl1250.

@@n Запись дисков из консоли
@@t console, wodim, genisoimage, iso, linux, cd, burn
@@d

								Создание образа
								
Для создания образа диска можно использовать утилиту dd. Эта утилита доступна,
практически, в любых linux-дистрибутивах. Используется она следующим образом:

    $ dd if=/dev/cdrom of=mycd.iso

if - input file (устройство чтения);
of - output file (файл для записи).

Другая утилита для создания iso-образов - genisoimage. Она способна создавать
образы из каталогов с файлами. Если возникает необходимость создать образ из
файлов и каталогов разбросанных по разным местам, нужно создать директорию
"виртуального проекта" и наполнить ее символическими ссылками на нужные файлы и
директории. Затем необходимо передать этот каталог утилите genisoimage:

    $ genisoimage -f -v -j -o mycd.iso /mnt/somedisk/temp

-v - информация о ходе процесса;
-j - задает фомат файловой системы  (Joliet - ISO9660 с надстройками);
-f - указывает genisoimage следовать по символическим ссылкам;
-udf (Universal Disc Format);
-dvd-video - для DVD Video дисков.

								 Запись образа

Для записи образа можно использовать утилиту wodim.  Например:

    # wodim dev=/dev/hdc -eject -v mycd.iso

-eject - выдвинуть каретку после прожига;
-dummy - симуляция прожига с выключенным лазером;
-multi - многосессионный диск;
-fix - фиксация диска (без записи);
speed=value - задает скорость записи;
blank=mode - очиста содержимого CD-RW. Режимы: all, fast, session;
-format - форматировать болванку;
-overburn - включить возможность записи больше, чем стандартный объем диска.

@@n Защита флэшки от записи
@@t usb, flash, guard, lock-usb, lock, linux, hdparm
@@d

hdparm

Снятие защиты от записи на  устройстве sdb1:
# sudo hdparm  -r0 /dev/sdb1

@@n Сброс BIOS
@@t bios, hack, cmos
@@d

Сброс пароля BIOS достигается обнулением памяти CMOS. Не стоит забывать о том,
что в этом случае все настройки BIOS будут также сброшены на стандартные.

Для начала нужно выключить блок питания компьютера или отключить его от сети.
Затем необходимо переставить джампер переключателя Clear CMOS во второе
положение.  Этот переключатель, как правило, находится рядом с батарейкой
CMOS-памяти на материнской плате. Через 10-20 секунд можно возращать джампер в
исходное состояние. Пароль сброшен!

Если переключатель Clear CMOS на материнской плате отсутствует, необходимо
извлеч батарейку CMOS-памяти на несколько минут, либо просто замкнуть контакты
"-" и "+" гнезда батарейки.

@@n Сброс пароля пользователя Windows
@@t password, windows, hack
@@d

    Нужно загрузить любую liveOS и выполнить следующие действия:
- перейти в каталог Windows/System32

    cd /windows/system32

- переименовать файл Logon.scr в любой другой, затем создать копию
Cmd.exe, присвоив ему имя Logon.scr

    ren logon.scr logon.old
    copy cmd.exe logon.scr

    Поле чего во время загрузки ОС пользователь окажется в консоли, где
с помощью утилиты net user можно манипулировать учетными записями.

    Просмотр существующих учетных записей:

    net user

    Изменение пароля:
    
	net user имя_администратора пароль

   Создание учетной записи:

   net user имя_админа его_пароль /add
   net localgroup Администраторы имя_админа /add
   net localgroup Пользователи имя_админа /delete

@@n Получение сведений о компьютере
@@t lspci, lshw, lsof, lscpu, fdisk, info, linux, lsmod, ls
@@d

Для просмотра сведений о железе компьютера в Linux имеется несколько
очень полезных команд.

Информация об аппаратном обеспечении, достаточно хорошо
форматированный вывод:
# lshw
Запуск GUI:
# lshw-gtk

Просмотр информации о usb устройствах:
# lsusb

Просмотр pci устройств:
# lspci

Просмотр сведений о процессоре:
# lscpu
Для получения более детальной информации можно прочитать cpuinfo:
# cat /proc/cpuinfo

Из того же перечня следует упомянуть утилиты, не имеющие отношения к
hardware.  Информация об открытых файлах:
# lsof
Информация о загруженных модулях (драйверах) ядра:
# lsmod

Для вывода информации по всему железу используется команда dmesg.
Использовать данную команду удобно совместно с утилитой grep, правда в
этом случае нужно четко представлять, что нужно смотреть.
# dmesg dmesg | grep VGA

Для просмотра сведений о подключенных жестких дисках можно
воспользоваться следующей утилитой:
# fdisk -l

@@n Удаление драйвера nvidia
@@t driver, nvidia, console, linux, uninstall
@@d

						Удаление драйвера через консоль

Второй вариант требуется если вы не можете загрузиться в рабочее окружение либо
по каким-то причинам, первый способ не сработал:

Если вы еще не в консоли, то переключаемся в консоль нажав ctrl+alt+F1 (или F2,
или F3...)

Вы увидите приглашение ввести имя пользователя, а после ввода ввести свой
пароль. Вводите.Теперь если у нас рабочее окружение было загружено, то надо
остановить X-сервер

Командуете в консоле:

    sudo service lightdm stop

У вас может быть установлен другой менеджер дисплея, т.е. не lightdm, еще может
gdm или kdm. Всё зависит от используемого вами дистрибутива. Поэтому сначала
выясните какой у вас ДМ, а потом и пишите в команде нужный.

После выполнения предыдущей команды пишите:

    sudo apt-get purge nvidia-*

После ввода этой команды вам будет сообщено, что для выполнения этой команды
необходимо удалить такие-то пакеты, соглашайтесь нажав "Y". Ждите окончания
выполнения операции и после этого пере загружайтесь, написав команду:

    sudo reboot

Не забудьте про xorg.conf. У себя я сначала его не переименовывал. Система и
так загрузилась, но проверив системный журнал увидел что она к нему обращается
и решил его переименовать.

Почему я его просто переименовываю?

Просто потому что так проще будет его вернуть обратно, если что-то пойдет не
так, присвоив ему старое имя.

@@n Удовлетворение зависимостей
@@t linux, packages, dependings, dpkg, aptitude, install
@@d

dpkg -i name_package || apt-get -f install
aptitude build-dep

@@n Форматирование флэшек, создание ФС
@@t filesystem, fs, linux, flash, usb, formating, mkfs
@@d

Для того чтобы убедиться в том, какую метку имеет флешка (жесткий диск),
набираем команду:

	$ sudo blkid

Получаем следующую информацию (зависит от подключенных к системе носителей):

/dev/sda2: UUID="C49A200C9A1FFA1E" TYPE="ntfs" 
/dev/sda3: UUID="C0AADE1CAADE0F32" TYPE="ntfs" 
/dev/sda5: UUID="fdb8c9a2-bc85-44ee-8794-4000a52b3660" TYPE="swap" 
/dev/sda6: UUID="929da203-4f07-4b2c-afd9-ed6d5aa92415" TYPE="ext4" 
/dev/sda7: UUID="344504f7-88e0-430e-910e-2a53aaaaa00e" TYPE="ext4" 
/dev/sda8: UUID="022ac36e-1042-4963-8c16-7a9aa8ffca40" TYPE="ext4" 
/dev/sda9: UUID="8767db46-5754-424a-8846-4993a8151ef0" TYPE="ext4" 
/dev/sda10: UUID="f205d6f2-554d-4ea0-aa57-440ecf1e0371" TYPE="ext4" 
/dev/sda11: UUID="b6534e11-2efa-41c8-8773-2557e3958d6a" TYPE="ext4" 
/dev/sda12: UUID="251710e3-cb62-44f6-833a-a2cc6b102e3b" TYPE="ext4" 
/dev/sdb1: UUID="586D-759A" TYPE="vfat" 

В данном случае необходимо отформатировать флешку из FAT32 в NTFS. Видим
строку:

/dev/sdb1:UUID="586D-759A" TYPE="vfat"

это и есть интересующее нас устройство.  

Непосредственно перед созданием
файловой системы, необходимо размонтировать данное устройство:

	$ sudo umount /dev/sdb1

А затем можно создать файловую систему:

	$ sudo mkfs.ntfs /dev/sdb1

Для быстрого форматирования раздела необходимо указать ключ -f:

	$ sudo mkfs.ntfs -f /dev/sdb1

После завершения операции можно примонтировать устройство и проверить все ли с
ним в порядке:

	$ sudo mount /dev/sdb1 /media
	$ sudo blkid

/dev/sda2: UUID="C49A200C9A1FFA1E" TYPE="ntfs" 
/dev/sda3: UUID="C0AADE1CAADE0F32" TYPE="ntfs" 
/dev/sda5: UUID="fdb8c9a2-bc85-44ee-8794-4000a52b3660" TYPE="swap" 
/dev/sda6: UUID="929da203-4f07-4b2c-afd9-ed6d5aa92415" TYPE="ext4" 
/dev/sda7: UUID="344504f7-88e0-430e-910e-2a53aaaaa00e" TYPE="ext4" 
/dev/sda8: UUID="022ac36e-1042-4963-8c16-7a9aa8ffca40" TYPE="ext4" 
/dev/sda9: UUID="8767db46-5754-424a-8846-4993a8151ef0" TYPE="ext4" 
/dev/sda10: UUID="f205d6f2-554d-4ea0-aa57-440ecf1e0371" TYPE="ext4" 
/dev/sda11: UUID="b6534e11-2efa-41c8-8773-2557e3958d6a" TYPE="ext4" 
/dev/sda12: UUID="251710e3-cb62-44f6-833a-a2cc6b102e3b" TYPE="ext4" 
/dev/sdb1: UUID="608C572F4DD2178B" TYPE="ntfs" 

Замечаем, что после выполнения вышеописанных процедур, наше устройство
действительно имеет файловую систему NTFS.

/dev/sdb1: UUID="608C572F4DD2178B" TYPE="ntfs"

@@n Установка шрифтов в linux
@@t linux, fonts, ttf
@@d

Для установки шрифтов в систему, необходимо скопировать шрифты формата *.ttf в
директорию "$HOME/.fonts", а затем выполнить команду:

    $ fc-cache -f

или, если необходимо просто протестировать новые шрифты:

    $ xset -fp

@@n Настройка беспроводного соединения Debian
@@t linux, debian, wireless, network, config, wlan
@@d

			  Настройка беспроводного соединения Debian

В первую очередь необходимо убедиться, что установлены все необходимые
драйвера. Для чего нужно выяснить какое wifi устройство установлено на
компьютере.

$ lspci | grep Network

02:00.0 Network controller: Qualcomm Atheros AR9285 Wireless Network Adapter (PCI-Express) (rev 01)

Затем ищем в интернете необходимые для устройства драйвера и
сравниваем их со списком установленных модулей:

$ lsmod | grep ath

--------------------------------------------------------------
| ath9k        | 84653  | 0 |                                | 
| ath9k_common | 21530  | 1 | ath9k                          |
| ath9k_hw     | 380024 | 2 | ath9k_common,ath9k             |
| ath          | 21707  | 3 | ath9k_common,ath9k,ath9k_hw    |
| mac80211     | 421532 | 1 | ath9k                          |
| cfg80211     | 350041 | 4 | ath,ath9k_common,ath9k,mac80211|
--------------------------------------------------------------

Если в списке нужный модуль отсутствует, то необходимо установить
драйвера.

Устанавливаем утилиту для работы с wi-fi. Что в свою
очередь требует подключения non-free репозитория:

deb http://ftp.ru.debian.org debian wheezy main contrib non-free

Далее, как обычно, обновляем список пакетов:

# aptitude update

и устанавливаем утилиту:

# aptitude install wireless-tools

После этого приступаем к непосредственной установке драйвера.

После установки проверяем все ли работает нормально:

# ifconfig		# или $ sudo iwconfig

-------------------------
eth0      Link encap:Ethernet  HWaddr c8:60:00:3f:68:83  
          UP BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:37 errors:0 dropped:0 overruns:0 frame:0
          TX packets:37 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:5888 (5.7 KiB)  TX bytes:5888 (5.7 KiB)

wlan0     Link encap:Ethernet  HWaddr 00:08:ca:ce:d1:c6  
          inet addr:192.168.43.75  Bcast:192.168.43.255  Mask:255.255.255.0
          inet6 addr: fe80::208:caff:fece:d1c6/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:52224 errors:0 dropped:0 overruns:0 frame:0
          TX packets:47444 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:42117703 (40.1 MiB)  TX bytes:7388370 (7.0 MiB)
-------------------------

Далее конфигурируем сетевые настройка wi-fi:

# vim /etc/network/interfaces

-------------------------
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
allow-hotplug eth0
iface eth0 inet dhcp

# wlan config
allow-hotplug wlan0
iface wlan0 inet dhcp
-------------------------

После настройка запускаем wi-fi интерфейс:

# ifconfig wlan0 up

Выполняем сканирование доступных точек доступа:

# iwlist scanning

-------------------------
lo        Interface doesn't support scanning.

eth0      Interface doesn't support scanning.

wlan0     Scan completed :
          Cell 01 - Address: 5A:12:43:3F:28:E9
                    Channel:1
                    Frequency:2.412 GHz (Channel 1)
                    Quality=66/70  Signal level=-44 dBm  
                    Encryption key:on
                    ESSID:"free@"
                    Bit Rates:1 Mb/s; 2 Mb/s; 5.5 Mb/s; 11 Mb/s; 6 Mb/s
                              9 Mb/s; 12 Mb/s; 18 Mb/s
                    Bit Rates:24 Mb/s; 36 Mb/s; 48 Mb/s; 54 Mb/s
                    Mode:Master
                    Extra:tsf=00000002c458a03b
                    Extra: Last beacon: 44ms ago
                    IE: Unknown: 00056672656540
                    IE: Unknown: 010882848B960C121824
                    IE: Unknown: 030101
                    IE: Unknown: 32043048606C
                    IE: Unknown: 2A0100
                    IE: Unknown: 2D1A300103FF00000000000000000000000100000000000000000000
                    IE: Unknown: 3D1601000400000000000000000000000000000000000000
                    IE: Unknown: 7F0100
                    IE: Unknown: DD180050F2020101800003A4000027A4000042435E0062322F00
                    IE: IEEE 802.11i/WPA2 Version 1
                        Group Cipher : CCMP
                        Pairwise Ciphers (1) : CCMP
                        Authentication Suites (1) : PSK
-------------------------

На основании полученных данных дописываем в /etc/network/interfaces
следующие строки:

wireless-channel 1
wileless-mode Master

Устанавливаем поддержку WPA/WPA2:

# aptitude install wpasupplicant

Редактируем файл /etc/network/wpa-psk-tkip.conf

-------------------------
# wpa-psk-tkip

ctrl_interface=/var/run/wpa_aupplicant

network={
	ssid="free@"
	proto=WPA2 RSN
	key_mgmt=WPA-PSK
	pairwise=CCMP TKIP
	group=CCMP TKIP
	psk="1234567890"
}
-------------------------

Дописываем в /etc/network/interfaces:

-------------------------
#wpa-tkip
wpa-conf /etc/network/wpa-psk-tkip.conf
-------------------------

Перезагружаем сетевые подключения следующей командой:

# /etc/init.d/networking restart

Пользуемcя беспроводным соединением!!!

@@n Запуск WiFi
@@t wireless, network, linux, ifconfig, iwconfig
@@d

Последовательность действий для запуска wifi подключения.
В случае подключения к сети защищенной по протоколу WPA2, необходимо
создать файл конфигурации wpa_supplicant.conf, как описано в заметке
выше.

Активировать интерфейс wlan0:
# ifconfig wlan0 up

Настроить интерфейс:
# iwconfig wlan0 essid "free@" channel 1

Запустить wpa_supplicant:
# wpa_supplicant -B -Dwext -iwlan0 -c /etc/network/wpa_supplicant.conf

Получить ip-адрес:
# dhclient wlan0

Подключение готово к использованию.

@@n Создание стартового скрипта
@@t linux, boot, script, config
@@d

					 Создание стартового скрипта

Для того чтобы некоторый скрипт выполнялся автоматически при старте
системы, необходимо выполнить несколько требований:

1. Скрипт необходимо разместить в директории /etc/init.d/
2. Скрипт должен быть исполняемым:

$ sudo chmod +x /etc/init.d/script_name

3. Скрипт должен содержать некоторую обязательную информацию, которую
можно прочитать из файла /etc/init.d/skeleton

4. Последний этап создание link'ов в директориях /etc/rc*:

$ sudo isserv script_name

@@n Нстройка сети в debian
@@t network, config, debian, linux
@@d

Основные конфигурации сети располагаются в файле
/etc/network/interfaces. Конфигурация сети использующей DHCP
(динамическую адресацию), подлюченной через устройство eth0, выглядит
следующим образом:

auto eth0
allow-hotplug eth0		# позволить горячее подключение
iface eth0 inet dhcp	# использовать dhcp

Конфигурация со статическими адресами представлена ниже:

auto eth0
iface eth0 inet static
	address 192.168.0.3
	netmask 255.255.255.0
	gateway 192.168.0.1

Запуск / останов интерфейсов производится следующим образом:

$ sudo ifconfig eth0 up
$ sudo ifconfig eth0 down

Перезапуск сетевых служб:

$ sudo /etc/init.d/networking restart

@@n Создание пользователей linux
@@t linux, users, password, groups, config
@@d

Просмотр имеющихся в системе групп пользователей:
$ cat /etc/group

Добавление члена группы:
$ gpasswd -a user_name group_id

где user_name - имя пользователя;
group_id - идентификатор группы (обычно указывается название группы,
например users).

Удаление члена группы:
$ gpasswd -d user_name group_id

Добавление пользователя:
$ sudo useradd -m -g group_id  [-G opt_groups -c comments] -s
shell_path user_name

где -m создает домашнюю директорию по пути /home/user_name;
group_id - идентификатор группы;
opt_groups - дополнительные группы, в которых состоит пользователь;
comments - дополнительные сведения о пользователе;
shell_path - системная оболочка (/bin/bash);
user_name -имя пользователя

Кроме того, домашнюю директорию можно задать вручную:
$ sudo useradd -d /home/user -g users -s /bin/bash user

Назначение пароля пользователю:
$ passwd user_name

@@n Установка и настройка awesome WM
@@t awesome, linux, install, config
@@d

Установка:
$ sudo aptitude install awesome awesome-extra

Файлы конфигурации представляют собой код на языке Lua.
Для настройки awesome рекомендуется скопировать основной
конфигурационный файл в домашнюю директорию, и работать уже над
копией.

mkdir ~/.config/awesome
cp /etc/xdg/awesome/rc.lua ~/.config/awesome/rc.lua
vim ~/.config/awesome/rc.lua

Темы оформления хранятся в директории /usr/share/awesome/themes, где
каждая тема имеет собственную папку. В этих папках хранятся файлы
конфигурации и другие файлы необходимые для настройки оформления,
включая изображения. Конфигурационный файл темы, как правило, носит
название theme.lua.

Создание собственной темы:
cp -Rv /usr/share/awesome/themes/default
/usr/share/awesome/themes/my_theme
vim /usr/share/awesome/themes/my_theme/theme.lua

@@n Перекодирование id3 тегов mp3
@@t id3, mp3, tags, python
@@d

Перекодирование id3-тегов из CP1251 в Unicode

Для этого ставим пакет mutagen, позволяющий редактировать различные
виды музыкальных тегов:

aptitude install python-mutagen

Переходим в каталог с музыкой. Ищем в текущем каталоге файлы по
расширению mp3, для каждого из найденных файлов меняем кодировку,
удаляем теги версии 1, записываем теги версии 2:

find . -iname "*.mp3" -print0 | xargs -0 mid3iconv -e CP1251 -d
--remove-v1

Описание опций:
-d — выводить на экран исправленные теги,
-e [codepage] — исходная кодировка тегов,
-remove-v1 — удалить исходные теги версии 1.

@@n Загрузочная флешка с Windows 7
@@t windows, install, bootable, flash
@@d

Установить gparted и ntfsprogs:
sudo aptitude install gparted ntfsprogs

Создать файловую систему на флэш-накопителе, предварительно
отмонтировав устройство:

sudo umount /dev/sdb1
sudo mkfs.ntfs /dev/sdb1

Те же операции можно выполнить из GUI gparted.
Затем нужно установить boot-флаг на флэш. Это можно сделать как из GUI
gparted, так и из консоли с помощью fdisk или того же gparted.

Монтировать iso образ:

sudo mkdir /media/iso
sudo mount windows7.iso /media/iso -t udf -o loop

Копировать файлы с образа на флэш:

cp -R /media/iso/* /media/MyFlashDrive

Если после копирования файлов с флешки загрузиться не выходит,
вероятно там не корректная MBR.
Можно заюзать утилиту ms-sys:
ms-sys -7 /dev/sdb

@@n Создание невидимой папки
@@t windows, invisible, folder
@@d

- создать папку
- выбрать в качестве значка пустой квадрат
- переименовать папку, зажав ALT и набрав с цифровой клавиатуры 0160
Папка невидима.

@@n Удаление значков устройств в Моем компьютере
@@t windows, devices, delete, icons
@@d

Для удаления значков нежелательных устройств в "Моем компьютере",
необходимо пройти в "Панель управления" -> "Администрирование" ->
"Управление компьютером" -> "Управление дисками". Далее выделяем
нужный (ненужный) диск или устройство, вызываем контекстное меню,
выбираем пункт "Изменить / удалить букву диска", в появившемся окне
щелкаем на "Удалить".
Следует заметить, что при удалении значков жестких дисков, доступ к их
содержимому невозможен до выполнения обратной операции. А вот в случае
с модемом, операция проходит безболезненно и без нежелательных
последствий.

@@n Меняем названия стандартных папок Debian
@@t debian, linux, folder, rename
@@d

Для изменения расположения стандартных папок в Debian необходимо
отредактировать файл конфигураций ~/.config/user-dirs.dirs.

@@n Создание alias'ов
@@t alias terminal linux
@@d

Alias'ы позволяют создавать альтернативные версии стандартных команд.
Эта возможность позволяет создавать собственные названия сложны
команд.

Для создания alias'а, который нужен только на протяжении текущего
сеанса, достаточно воспользоваться командой alias:

$ alias [new_command]='old_command'

Например:

$ alias ls='ls --color=auto'

Постоянные alias'ы хранятся в файле ~/.bashrc и прописываются
аналогично приведенной выше команде.

@@n Просмотр информации о процессах системы
@@t process ps kill linux terminal процессы терминал
@@d

Для вывода списка запущенных процессов используется команда:

$ ps

Вывод всех запущенных процессов:

$ ps -e

Вывод всех запущенных процессов с подробной информацией:

$ ps -ef

Вывод инормации о процессе по его имени:

$ ps -fC [process_name]

Вывести только pid процесса по имени:

$ ps -C [process_name] -o pid=

Завершить процесс:

$ kill [pid]

Завершить процесс по имени:

$ kill `ps -C [process_name] -o pid=`

@@n Установка и настройка Git
@@t git install config
@@d

Для установки Git необходимо выполнить команду:

$ aptitude install git git-core

Первичная настройка возможна с использованием следующих команд:

$ git config --global user.name [name]		# имя пользователя
$ git config --global user.email [e-mail]	# e-mail
$ git config --global core.editor vim		# текстовый редактор
$ git config --global merge.tool vimdiff

Просмотр текущих настроек:

$ git config list

@@n Использование Git
@@t git use init add diff status commit rm mv
@@d

Для создания репозитория в текущем каталоге необходимо выполнить
команду:
$ git init

После инициализации репозитория необходимо проиндексировать файлы,
которые планируется отслеживать.
$ git add [files]
$ git add *.py

Для просмотра состояния файла (отслеживаемый, неотслеживаемый)
предназначена команда:
$ git status

Перед каждым коммитом измененных файлов их необходимо индексировать
командой add.
Для игнорирования файлов, которые нет нужды отслеживать и добавлять в
репозиторий достаточно создать файл .gitignore. В данном файле с помощью
glob шаблонов (упрощенные регулярные выражения) описываются файлы и
директории, подлежащие игнору.

Просмотр неиндексированных изменений выполняется командой:
$ git diff

Чтобы просмотреть изменения, которые войдут в следующий коммит
(индексированные), нужно выполнить команду:
$ git diff --cached
$ git diff --staged

Фиксация изменений выполняется следующим образом:
$ git commit

при этом в новый слепок войдут только проиндексированные файлы.
Удаление файлов выполняется командами:
$ git rm [file]	# неиндексированный файл
$ git rm -f [file] # индексированный файл

Данные команды удаляют файл из Git и рабочей директории. Если есть
необходимость удалить файл только из списка отслеживаемых Git'ом
файлов, следует воспользоваться командой:
$ git rm --cached [file]

Переместить файл:
$ git mv [file_from] [file_to]

Лог изменений:
$ git log

Повторное выполнение коммита:
$ git commit --amend

Отмена индексации файла:
$ git reset HEAD [file]

Отмена изменения файла:
$ git checkout -- [file]

Список удаленных репозиториев:
$ git remote -v	# опция v выводит url репозиториев

Клонировать репозиторий:
$ git clone [url]

Получить данные из удаленного проекта:
$ git fetch [remote-name]

@@n Ветвление в GIT
@@t git branch merged unmerged
@@d

Просмотреть список доступных в проекте веток:
$ git branch
$ git branch -v

Создать новую ветку:
$ git branch [branch_name]

Переключиться на другую ветку:
$ git checkout [branch]

Выполнить слияние веток:
$ git checkout [main_branch]
$ git merge [new_branch]

@@n Цветовое оформление консольного вывода
@@t color console out prompt
@@d

Для форматирвоания текста или выделения его определенным цветом в
терминале linux используется специальная экранирующая
последовательность с указанием перечня атрибутов. Сама
последовательность имеет вид \x1b[...m. Вместо "..." подставляются
целочисленные значения желаемых атрибутов. Список атрибутов приведен
ниже:

Атрибуты:
-----------------------------
| 0 | нормальный режим      | 
| 1 | жирный                |
| 4 | подчеркнутый          |
| 5 | мигающий              |
| 7 | инвертированные цвета |
| 8 | невидимый             |
-----------------------------

Цвета представлены двузначным числом NC, где первая цифра (N) равна 3 или 4, для
цвета текста или фона соответственно, а вторая определяет сам цвет (C):
------------------
| N0 | черный    |
| N1 | красный   |
| N2 | зеленый   |
| N3 | желтый    |
| N4 | синий     |
| N5 | пурпурный |
| N6 | голубой   |
| N7 | белый     |
------------------

Пример:
$ echo -e '\x1b[1;34;41mТекст\x1b[0m'
Выводит синий текст на красном фоне жирным шрифтом.
Последовательность \x1b[0m возвращает настройки текста в нормальное
состояние.

@@n Изменение приглашения на ввод (prompt) в консоли
@@t prompt console color
@@d

За содержимое строки приглашения в bash консоли отвечают две
переменные - PROMPT_COMMAND и PS1.
Собственно, достаточно задать значение для PS1 в .bashrc.

@@n Добавление архитектуры
@@t arch dpkg
@@d

Для установки 32 битных приложений на 64 битной системе, нужно
добавить поддержку архитектуры i386:

$ sudo dpkg --add-architecture i386

После чего обновляем списко пакетов:

$ sudo aptitude update

@@n Создание запароленного архива .zip
@@t archives zip unzip pass
@@d

Для создания архива .zip, защищенного паролем, необходимо выполнить
команду:

$ zip -e archive.zip directory/

После ввода команды zip попросит дважды ввести пароль.

Для распаковки архива достаточно воспользоваться командой unzip:

$ unzip -P password archive.zip

Если использовать unzip без аргументов, архиватор сам предложит ввести
пароль.

@@n Вывод консольной программы в vim
@@t vim console terminal out
@@d

Для того, чтобы вывод консольного приложения был направлен в vim, для
удобной навигации и поиска нужной информации, а так же возможного
сохранения информации в текстовом файле, достаточно использовать
следующую последовательность команд (на примере aptitude search):

$ aptitude search name > temp.list && vim temp.list || wait && rm
temp.list

Таким образом, сначала выполняется команда aptitude search, которая
выполняет поиск пакетов с заданным именем, вывод утилиты перенаправлен
в файл temp.list. После созданный предыдущей командой файл открывается
в vim. Команда || wait говорит командной оболочке ждать завершения
предыдущей команды, т. е. завершение vim, после чего выполняется
последняя команда, удаляющая временный файл.

@@n IP адресация (основы)
@@t ip tcp/ip config linux network
@@d

IP адрес представляет собой 32-битный идентификатор компонента сети,
состоящий из 4 октетов (8 бит), как правило, записанный в десятичной
нотации:

----------------------------------------------
| 192      | 168      | 1        |  1        | 
| 11000000 | 10101000 | 00000001 |  00000001 | 
----------------------------------------------

IP адрс включает в себя адрес сети и адрес узла. Определить какая
часть адреса является адресом сети можно с помощью маски подсети.
Маска подсети - 32-битный идентификатор, в котором биты заполненные
нулями укзывают какие биты ip-адреса являются адресом сети.
Например, стандартная маска локальной сети:

---------------------------------------------
| 255      | 255      | 255      | 0        | 
| 11111111 | 11111111 | 11111111 | 00000000 | 
---------------------------------------------

В данной маске первые 24 бита заполнены единицами, что означает, что
первые 24 бита ip-адреса являются адресом сети. Соответственно в
примере приведенном выше адресом сети с данной маской подсети будет

---------------------------------------------
| 192      | 168      | 1        | 0        | 
| 11000000 | 10101000 | 00000001 | 00000000 | 
---------------------------------------------

Адрес сети - адрес узловая часть которого заполнена нулями.

IP-адреса делятся на 5 классов, которым соответствуют определенные
маски подсети и задачи. Класс сети можно определить по первому октету:

-------------------------------------------------------------------
| Класс | Диапазон 1 октета | Маска подсети                       |
|-------+-------------------+-------------------------------------|
|   A   | 1-127             | 255      0        0        0        |
|       | 00000000-01111111 | 11111111 00000000 00000000 00000000 |
|-------+-------------------+-------------------------------------|
|   B   | 128-191           | 255      255      0        0        |
|       | 10000000-10111111 | 11111111 11111111 00000000 00000000 |
|-------+-------------------+-------------------------------------|
|   C   | 192-223           | 255      255      255      0        |
|       | 11000000-11011111 | 11111111 11111111 11111111 00000000 |
|-------+-------------------+-------------------------------------|
|   D   | 224-239           |                                     |
|       | 11100000-11101111 |                                     |
|-------+-------------------+-------------------------------------|
|   E   | 240-255           |                                     |
|       | 11110000-11111111 |                                     |
-------------------------------------------------------------------


@@n Вывод информации об оперативной  памяти компьютера.
@@t operating memory linux terminal
@@d

Для вывода подробной информации об установленной оперативной памяти
нужно использовать утилиту dmidecode:

# dmidecode --type 17

@@n Проблема с отображением java приложений в Awesome.
@@t java jdk linux awesome
@@d

При попытке запустить java-приложение на эране появляется пустое серое
окно. Для решения данной проблемы необходимо установить утилиту wmname
и запускать ее с аргументом LG3D или Sawfish, после чего можно
запустить java-приложение:

$ wmname Sawfish

Другое решение заключается в добавлении приведенной ниже строки в файл
/etc/profile.d/jre.sh:

_JAVA_AWT_WM_NONREPARENTING=1; export _JAVA_AWT_WM_NONREPARENTING

@@n Установка драйвера wi-fi роутера ralink rt2870.
@@t ralink wi-fi wireless drivers install linux terminal
@@d

Для начала необходимо установить следующие пакеты:

$ sudo aptitude install gcc make linux-headers-`uname -r` build-essential

Дялее клонируем git дистрибутив драйверов:

$ git clone https://github.com/porjo/mt7601.git

Переходим в директорию mt7601:

$ cd mt7601
$ sudo make
$ sudo make install
$ sudo mkdir -p /etc/Wireless/RT2870STA/
$ sudo cp RT2870STA.dat /etc/Wireless/RT2870STA/
$ sudo depmod -a
$ sudo modprobe -mt7601Usta

Далее можно прописать драйвер в автозагрузку, для чего в файле
/etc/rc.local до exit 0 нужно прописать modprobe mt7601Usta.

После обновления ядра нужно будет пересобирать драйвер:

$ cd mt7601/src
$ sudo make clean
$ sudo make
$ sudo make install
$ sudo depmod -a
$ sudo modprobe mt7601Usta

@@n Расшаривание интернета через ad-hoc wifi соединение.
@@t wifi ad-hoc internet config linux terminal nat wireless
@@d

Для начала необходимо организовать ad-hoc соединение (соединение
точка-точка).
На компьютере подключенном к интернет настраиваем wifi интерфейс.

$ sudo vim /etc/network/interfaces

##############################
#/etc/network/interfaces

auto ra0
iface ra0 inet static
	address 192.168.2.1
	netmask 255.255.255.0
	wireless-mode ad-hoc
	wireless-channel 1
	wireless-rate auto
	wireless-essid Linux@
##############################

Пробрасываем форвардинг:

$ sudo vim /etc/sysctl.conf

##############################
net.ipv4.ip_forward =1
##############################

Далее создаем NAT:

$ sudo iptables -t nat -A POSTROUTING --out-interface eth0 -j
MASQUERADE

(eth0 - интерфейс подключенный к интернету)

Сохраняем настройки NAT:

$ iptables-save > /etc/iptales.up.rules

Добавляем в /etc/network/interfaces следующую строку:

pre-up iptables-restore < /etc/iptables.up.rules

Перезапускаем сетевую службу:

$ sudo /etc/init.d/networking restart

------------------------------
Настраиваем клиентскую машину:

##############################
#/etc/network/interfaces

auto wlan0
iface wlan0 inet static
	address 192.168.2.2
	netmask 255.255.255.0
	wireless-mode ad-hoc
	wireless-channel 1
	wireless-rate auto
	wireless-essid Linux@
##############################

Выполняем пинг раздающего компьютера:

$ ping 192.168.2.1

Если все в порядке, для подключению к интернету, необходимо прописать
DNS адрез из файла /etc/resolve.conf раздающего компьютера, в
аналогичный файл клиентской машины.

Интернет подключен, проверяем:

$ ping ya.ru

@@n Настройка терминала linux по умолчанию
@@t config linux terminal
@@d

Для просмотра доступных альтернатив стандартному эмулятору терминала
необходимо ввести команду:

$ update-alternatives --list x-terminal-emulator

Далее из полученного списка выбрать желаемую альтернативу и ввести
команду:

# update-alternatives --set x-terminal-emulator /usr/bin/gnome-terminal

@@n Компиляция LaTeX
@@t linux terminal latex compiling pdf dvi
@@d

Компиляция tex-файлов в dvi или pdf выполняется следующими командами:

$ latex in.tex
$ xdvi in.tex

$ pdflatex in.tex out.pdf

@@n Изменение UUID и метки тома
@@t linux terminal uuid label fdisk blkid tune2fs e2label
@@d

Для просмотра меток и uuid подключенных разделов используется команда:

$ sudo blkid -c /dev/null

Для задания нового uuid разделу необходимо выполнить команду:

$ sudo tune2fs /dev/sda1 -U `uuid`

где uuid - утилита генерирующая уникальные идентификаторы.

Метка тома меняется другими утилитами соответствующими файловой
системе, например для ext используется утилита e2label:

$ sudo e2label /dev/sda1 label_name

@@n Создание клона раздела жесткого диска
@@t linux terminal uuid label fdisk blkid tune2fs e2label
@@d

Для резервного копирования системного раздела можно воспользоваться
методом побитового копирования одного раздела в другой. При этом,
желательно, чтобы разделы были одинакового размера. Копирование
производится с помощью стандартной linux утилиты dd:

$ sudo dd if=/dev/sda1 of/dev/sda2 bs=10M

где bs - размер блока данных при копировании.

После создания такой копии на жестком диске окажется два одинаковых,
вплоть до имени метки и UUID, раздела. Чтобы этого избежать нужно
изменить имя метки и UUID используя утилиты tune2fs и e2label.

@@n Сворачивание блоков кода в VIM 
@@t linux terminal vim blocks code fold folding 
@@d

VIM может сворачивать текстовые блоки по следующим правилам:

- ручное сворачивание по метке (описано в :help fold-manual)
- сворачивание на основании отступов в начале строк (описано в :help
  fold-indent)
- использование выражений для сворачивания (описано в :help fold-expr)
- сворачивание на основании синтаксиса (описано в :help fold-syntax)
- использование разницы – сворачивание не изменившегося текста
  (описано в :help fold-diff)
- вставка в тексте маркеров для обозначения точки сворачивания
  (описано в :help fold-marker)

Для начала использования необходимо активировать возможность
сворачивания :set foldenable Затем задать правило для сворачивания,
например, :set foldmethod=indent (сворачивание на основании отступов в
начале строк)

Команды для создания свертки блоков

zf#j - создает свертку от текущей позиции до # строк вниз

zf/подстрока - создает свертку от текущей позиции и до первой
найденной подстроки

v/V и zf - выделение блока и создание свертки

Команды для управления

zc – свернуть блок
zo – развернуть блок
zM – закрыть все блоки
zR – открыть все блоки
za – инвертирование (если открыто – закрыть, если закрыто – открыть)
zj - переход к следующей свертке
zk - переход к предыдущей свертке
zd - удалить свертку под курсором
zD - удалить все свертки
[z - перейти к началу текущей свертки
]z - перейти к концу текущей свертки

После закрытия vim все свертки забываться, для сохранения сверток в
открытом файле используется команда :mkview, для загрузки - loadview.

@@n Создание локального репозитория linux 
@@t linux terminal local repository 
@@d

Для начала нужно создать папку для репозитория:

mkdir -p $HOME/.repository/wheezy/pool/ && cd
$HOME/.repository/wheezy/ 

Скопируйте имеющиеся у вас пакеты в $HOME/.repository/wheezy/pool,
после чего создайте индекс пакетов:

dpkg-scanpackages pool /dev/null | gzip -c9 >
$HOME/.repository/wheezy/pool/Packages.gz

Репозиторий готов, осталось подключить его:

sudo touch /etc/apt/sources.list.d/local.list && sudo chmod 777
/etc/apt/sources.list.d/local.list sudo echo 'deb
file:'$HOME'/.repository/wheezy pool/' >>
/etc/apt/sources.list.d/local.list

Обновляем список пакетов:

sudo apt-get update 

После этого система будет жаловаться на не
аутентифицированые пакеты, для того чтобы решить данную проблему
необходимо иметь GPG подпись, но для локального хранилища она не
критична.

@@n Создание локального репозитория из iso-образов
@@t linux terminal local repository iso
@@d

Первым делом создаем точки монтирования:

# mkdir /media/repo/deb1
# mkdir /media/repo/deb2
# mkdir /media/repo/deb3

Далее в файл /etc/rc.local прописываем команды монтирования имеющихся
iso-образов:

mount -t iso9660 /home/repo/debian-8.4.0-i386-DVD-1.iso
mount -t iso9660 /home/repo/debian-8.4.0-i386-DVD-2.iso
mount -t iso9660 /home/repo/debian-8.4.0-i386-DVD-3.iso

(Монтирование можно выполнить через файл /etc/fstab).

Далее необходимо отредактировать файл /etc/apt/source.list, добавив
следующие строки:

deb file:///media/repo/deb1 jessie contrib main
deb file:///media/repo/deb2 jessie contrib main
deb file:///media/repo/deb3 jessie contrib main

После проделанных выше операций необходимо обновить список доступных
пакетов:

# aptitude update

Локальный репозиторий готов!!!

@@n Git reset
@@t git reset head откат 
@@d 24.10.16

Ситуация когда у вас уже есть клон репозитория с которым вы работаете, делаете pull и смотрите что там какая то фигня накоммитчена от разработчиков.

Выбираем нужный бранч(ветку), у меня она master
git checkout master

делаем откат изменений в репозитории для примера на два коммита назад
git reset --hard HEAD~2

Можно сделать до какого то определенного коммита по хешу
git reset --hard HEAD hash
Хеш можно взять в вебинтерфейсе гитхаба.

Далее делаем принудительный коммит в основной репо на гитхабе
git push -f origin master
без -f будет ругаться что у вас версия младше чем в гитхабе и вам надо сделать pull

@@n screenshots
@@t screen shots screenshots imagemagick import convert
@@d 2017-04-14

Сделать снимок экрана можно посредством утилиты import из пакета
imagemagick.

Снимок экрана:
$ import -window out.jpg

Снимок области:
$ import -frame out.jpg

Для того чтобы сделать снимок заданной области, можно использовать
следующий скрипт сочетающий использование import и convert:
$ import -window root source_$(date +%F).jpg
$ convert *.jpg -crop 640x860+310+120 +repage screen_$(date +%F).jpg
$ rm source*.jpg

где 640х860 - размер области экрана
310+120 - смещение относительно левого верхнего угла экрана.

@@n установка xorg + i3wm на ArchLinux
@@t arch linux i3wm xorg
@@d 09.05.17

Для работы i3wm необходимо установить xorg.

# pacman -S xorg xorg-server xorg-xinit xorg-utils xorg-server-utils

Дополнительно возможно придется установить:

# pacman -S xorg-twm xorg-xclock xterm

После чего можно устанавливать i3wm:

# pacman -S i3-wm i3status i3lock

После установки нужно прописать в файле ~/.xinitrc:

exec i3

Для запуска иксов выполнить команду:

$ startx

@@n Звук в archLinux
@@t arch linux sound alsa
@@d 09.05.17

Для правильной работы звука в ArchLinux нужно установить alsa:

# pacman -S alsa-lib alsa-tools alsa-utils

В alsamixer выставить значения громкости на нужных каналах и клавишей
"M" сделать unmute каналов.

@@n Раскладка клавиатуры Linux
@@t arch linux keyboard map keymap setxkbmap
@@d 09.05.17

Настройка переключения раскладок клавиатуры выполняется командой
setxkbmap, которую можно прописать в ~/.xinitrc:

$ setxkbmap -optino grp:alt_shift_toogle -option lv3:ralt_switch
-option grp_led:scroll -layout us+typo,ru:2+typo

@@n Запуск проводного соединения ArchLinux
@@t arch linux network wired internet
@@d 09.05.17

Просмотр доступных интерфейсов:

# ip link

Включение интерфейса:

# ip link set eth0 up

Получение динамического IP (необходима установка dhclient):

# systemctl start dhclient@eth0.service

Проверка подключения:

& ping ya.ru

@@n Конфигурирование Vim
@@t vim config vimrc bundle vundle
@@d 13.05.17

Настройка пользовательского сеанса Vim:
Скопировать файл vimrc в директорию ~/.vim/vimrc.

Настройка root сеанса Vim:
Дополнить /etc/vimrc (/usr/share/vim/vimfiles/archlinux.vim) содержимым файла ~/.vim/vimrc.

Установить Vundle:

$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle

Установить плагины Vundle прописанные в vimrc:

В командной строке Vim'a выполнить:
:BundleInstall

@@n Добавление Windows7 в grub
@@t grub win win7 windows windows7 arch archlinux linux boot
@@d 21.05.17

Установить grub, если не установлен:

# pacman -S grub

# grup-install /dev/sda

Узнаь uuid раздела с windows:

# ls -al /dev/disk/by-uuid

Создать файл конфигурации /etc/grub.d/40_custom
----------------------------------------------------------------------
menuentry "Win7" {
	insmod part_msdos
	insmod ntfs
	set root=(hd0,msdos1)
    search --no-floppy --fs-uuid --set 82FE2760FE274BAB
	chainloader +1
}
----------------------------------------------------------------------

set root=(hd0,msdos1) в случае, если windows установлен на разделе sda1
sda - hd0 --- первый физический жесткий диск
sda1 - msdos1 --- первый раздел жесткого диска
uuid - из вывода предыдущей команды.

После выполнения предыдущих операций выполнить команду:

# grub-mkconfig -o /boot/grub/grub.cfg

Выполнить перезагрузку.

@@n Просмотр списка разделов жесткого диска
@@t ls uuid harddisk disk hard hdd label
@@d 25.05.17

$ ls -l /dev/disk/

Возможны варианты:

$ ls -l /dev/disk/by-id
$ ls -l /dev/disk/by-label
$ ls -l /dev/disk/by-partuuid
$ ls -l /dev/disk/by-path
$ ls -l /dev/disk/by-uuid

@@n Монтирование флэшек
@@t mount users flash linux 
@@d 06.06.17

# mount -o gid=users,fmask=113,dmask=002 /dev/sdb1 /mnt/flash

или прописать монтирование устройства в /etc/fstab

# winD
/dev/sda3	/mnt/winD	ntfs	umask=0,nls=utf8,user,auto,rw 0 2

@@n Печать в evince
@@t printer print evince arch linux cups
@@d 09.06.17

В окне печати evince отсутствует принтер. Для решения проблемы нужно
установить пакет gtk3-print-backends.

@@n Приостановка печати после ошибки принтера
@@t printer job-stop job-retry arch linux lp cups
@@d 09.06.17

Чтобы принтер после ошибки не уходил в приостановленное состояние и
был доступен для печати, нунжно изменить политику обработки ошибок с
job-stop на job-retry. Это можно сделать через веб-интерфейс:
localhost:631

@@n Установка пакетов из AUR
@@t aur archlinux linux arch packages install makepkg
@@d 09.06.17

$ git clone https://aur.archlinux.org/package.git

$ cd package

$ makepkg -sri
